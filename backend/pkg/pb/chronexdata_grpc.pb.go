// Code generated by protoc-gen-go-grpc. DO NOT EDIT.
// versions:
// - protoc-gen-go-grpc v1.2.0
// - protoc             v4.25.3
// source: pkg/pb/chronexdata.proto

package pb

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.32.0 or later.
const _ = grpc.SupportPackageIsVersion7

// ChronexAdminProtoServiceClient is the client API for ChronexAdminProtoService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
type ChronexAdminProtoServiceClient interface {
	SaveProduct(ctx context.Context, in *SaveProductRequest, opts ...grpc.CallOption) (*SaveProductResponse, error)
	SaveFreebies(ctx context.Context, in *SaveFreebiesRequest, opts ...grpc.CallOption) (*SaveFreebiesResponse, error)
	SaveReviews(ctx context.Context, in *SaveReviewsRequest, opts ...grpc.CallOption) (*SaveReviewsResponse, error)
	SaveOrder(ctx context.Context, in *SaveOrderRequest, opts ...grpc.CallOption) (*SaveOrderResponse, error)
	SaveHomeImages(ctx context.Context, in *SaveHomeImagesRequest, opts ...grpc.CallOption) (*SaveHomeImagesResponse, error)
	GetAllFreebies(ctx context.Context, in *GetAllFreebiesRequest, opts ...grpc.CallOption) (*GetAllFreebiesResponse, error)
	GetAllFreebiesDropdown(ctx context.Context, in *GetAllFreebiesDropdownRequest, opts ...grpc.CallOption) (*GetAllFreebiesDropdownResponse, error)
	GetAllProduct(ctx context.Context, in *GetAllProductRequest, opts ...grpc.CallOption) (*GetAllProductResponse, error)
	GetAllReviews(ctx context.Context, in *GetAllReviewsRequest, opts ...grpc.CallOption) (*GetAllReviewsResponse, error)
	GetAllOrder(ctx context.Context, in *GetAllOrderRequest, opts ...grpc.CallOption) (*GetAllOrderResponse, error)
	GetAllHomeImages(ctx context.Context, in *GetAllHomeImagesRequest, opts ...grpc.CallOption) (*GetAllHomeImagesResponse, error)
	GetAllFreebiesById(ctx context.Context, in *GetAllFreebiesRequestById, opts ...grpc.CallOption) (*GetAllFreebiesResponseById, error)
	GetAllProductById(ctx context.Context, in *GetAllProductRequestById, opts ...grpc.CallOption) (*GetAllProductResponseById, error)
	GetAllReviewsById(ctx context.Context, in *GetAllReviewsRequestById, opts ...grpc.CallOption) (*GetAllReviewsResponseById, error)
	UpdateFreebies(ctx context.Context, in *UpdateFreebiesRequest, opts ...grpc.CallOption) (*UpdateFreebiesResponse, error)
	UpdateFreebiesQuantity(ctx context.Context, in *UpdateFreebiesQuantityRequest, opts ...grpc.CallOption) (*UpdateFreebiesQuantityResponse, error)
	UpdateFreebiesStatus(ctx context.Context, in *UpdateFreebiesStatusRequest, opts ...grpc.CallOption) (*UpdateFreebiesStatusResponse, error)
	UpdateReviews(ctx context.Context, in *UpdateReviewsRequest, opts ...grpc.CallOption) (*UpdateReviewsResponse, error)
	UpdateReviewsStatus(ctx context.Context, in *UpdateReviewsStatusRequest, opts ...grpc.CallOption) (*UpdateReviewsStatusResponse, error)
	UpdateProduct(ctx context.Context, in *UpdateProductRequest, opts ...grpc.CallOption) (*UpdateProductResponse, error)
	UpdateProductQuantity(ctx context.Context, in *UpdateProductQuantityRequest, opts ...grpc.CallOption) (*UpdateProductQuantityResponse, error)
	UpdateProductStatus(ctx context.Context, in *UpdateProductStatusRequest, opts ...grpc.CallOption) (*UpdateProductStatusResponse, error)
	UpdateOrder(ctx context.Context, in *UpdateOrderRequest, opts ...grpc.CallOption) (*UpdateOrderResponse, error)
	UpdateOrderStatus(ctx context.Context, in *UpdateOrderStatusRequest, opts ...grpc.CallOption) (*UpdateOrderStatusResponse, error)
	UpdateHomeImages(ctx context.Context, in *UpdateHomeImagesRequest, opts ...grpc.CallOption) (*UpdateHomeImagesResponse, error)
	DeleteHomeImages(ctx context.Context, in *DeleteHomeImagesRequest, opts ...grpc.CallOption) (*DeleteHomeImagesResponse, error)
	GetAllOrderRevenue(ctx context.Context, in *GetAllOrderRevenueRequest, opts ...grpc.CallOption) (*GetAllOrderRevenueResponse, error)
	GetAllTotalOrder(ctx context.Context, in *GetAllTotalOrderRequest, opts ...grpc.CallOption) (*GetAllTotalOrderResponse, error)
	GetBestSellingProducts(ctx context.Context, in *GetBestSellingProductsRequest, opts ...grpc.CallOption) (*GetBestSellingProductsResponse, error)
}

type chronexAdminProtoServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewChronexAdminProtoServiceClient(cc grpc.ClientConnInterface) ChronexAdminProtoServiceClient {
	return &chronexAdminProtoServiceClient{cc}
}

func (c *chronexAdminProtoServiceClient) SaveProduct(ctx context.Context, in *SaveProductRequest, opts ...grpc.CallOption) (*SaveProductResponse, error) {
	out := new(SaveProductResponse)
	err := c.cc.Invoke(ctx, "/api.ChronexAdminProtoService/SaveProduct", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *chronexAdminProtoServiceClient) SaveFreebies(ctx context.Context, in *SaveFreebiesRequest, opts ...grpc.CallOption) (*SaveFreebiesResponse, error) {
	out := new(SaveFreebiesResponse)
	err := c.cc.Invoke(ctx, "/api.ChronexAdminProtoService/SaveFreebies", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *chronexAdminProtoServiceClient) SaveReviews(ctx context.Context, in *SaveReviewsRequest, opts ...grpc.CallOption) (*SaveReviewsResponse, error) {
	out := new(SaveReviewsResponse)
	err := c.cc.Invoke(ctx, "/api.ChronexAdminProtoService/SaveReviews", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *chronexAdminProtoServiceClient) SaveOrder(ctx context.Context, in *SaveOrderRequest, opts ...grpc.CallOption) (*SaveOrderResponse, error) {
	out := new(SaveOrderResponse)
	err := c.cc.Invoke(ctx, "/api.ChronexAdminProtoService/SaveOrder", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *chronexAdminProtoServiceClient) SaveHomeImages(ctx context.Context, in *SaveHomeImagesRequest, opts ...grpc.CallOption) (*SaveHomeImagesResponse, error) {
	out := new(SaveHomeImagesResponse)
	err := c.cc.Invoke(ctx, "/api.ChronexAdminProtoService/SaveHomeImages", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *chronexAdminProtoServiceClient) GetAllFreebies(ctx context.Context, in *GetAllFreebiesRequest, opts ...grpc.CallOption) (*GetAllFreebiesResponse, error) {
	out := new(GetAllFreebiesResponse)
	err := c.cc.Invoke(ctx, "/api.ChronexAdminProtoService/GetAllFreebies", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *chronexAdminProtoServiceClient) GetAllFreebiesDropdown(ctx context.Context, in *GetAllFreebiesDropdownRequest, opts ...grpc.CallOption) (*GetAllFreebiesDropdownResponse, error) {
	out := new(GetAllFreebiesDropdownResponse)
	err := c.cc.Invoke(ctx, "/api.ChronexAdminProtoService/GetAllFreebiesDropdown", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *chronexAdminProtoServiceClient) GetAllProduct(ctx context.Context, in *GetAllProductRequest, opts ...grpc.CallOption) (*GetAllProductResponse, error) {
	out := new(GetAllProductResponse)
	err := c.cc.Invoke(ctx, "/api.ChronexAdminProtoService/GetAllProduct", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *chronexAdminProtoServiceClient) GetAllReviews(ctx context.Context, in *GetAllReviewsRequest, opts ...grpc.CallOption) (*GetAllReviewsResponse, error) {
	out := new(GetAllReviewsResponse)
	err := c.cc.Invoke(ctx, "/api.ChronexAdminProtoService/GetAllReviews", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *chronexAdminProtoServiceClient) GetAllOrder(ctx context.Context, in *GetAllOrderRequest, opts ...grpc.CallOption) (*GetAllOrderResponse, error) {
	out := new(GetAllOrderResponse)
	err := c.cc.Invoke(ctx, "/api.ChronexAdminProtoService/GetAllOrder", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *chronexAdminProtoServiceClient) GetAllHomeImages(ctx context.Context, in *GetAllHomeImagesRequest, opts ...grpc.CallOption) (*GetAllHomeImagesResponse, error) {
	out := new(GetAllHomeImagesResponse)
	err := c.cc.Invoke(ctx, "/api.ChronexAdminProtoService/GetAllHomeImages", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *chronexAdminProtoServiceClient) GetAllFreebiesById(ctx context.Context, in *GetAllFreebiesRequestById, opts ...grpc.CallOption) (*GetAllFreebiesResponseById, error) {
	out := new(GetAllFreebiesResponseById)
	err := c.cc.Invoke(ctx, "/api.ChronexAdminProtoService/GetAllFreebiesById", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *chronexAdminProtoServiceClient) GetAllProductById(ctx context.Context, in *GetAllProductRequestById, opts ...grpc.CallOption) (*GetAllProductResponseById, error) {
	out := new(GetAllProductResponseById)
	err := c.cc.Invoke(ctx, "/api.ChronexAdminProtoService/GetAllProductById", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *chronexAdminProtoServiceClient) GetAllReviewsById(ctx context.Context, in *GetAllReviewsRequestById, opts ...grpc.CallOption) (*GetAllReviewsResponseById, error) {
	out := new(GetAllReviewsResponseById)
	err := c.cc.Invoke(ctx, "/api.ChronexAdminProtoService/GetAllReviewsById", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *chronexAdminProtoServiceClient) UpdateFreebies(ctx context.Context, in *UpdateFreebiesRequest, opts ...grpc.CallOption) (*UpdateFreebiesResponse, error) {
	out := new(UpdateFreebiesResponse)
	err := c.cc.Invoke(ctx, "/api.ChronexAdminProtoService/UpdateFreebies", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *chronexAdminProtoServiceClient) UpdateFreebiesQuantity(ctx context.Context, in *UpdateFreebiesQuantityRequest, opts ...grpc.CallOption) (*UpdateFreebiesQuantityResponse, error) {
	out := new(UpdateFreebiesQuantityResponse)
	err := c.cc.Invoke(ctx, "/api.ChronexAdminProtoService/UpdateFreebiesQuantity", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *chronexAdminProtoServiceClient) UpdateFreebiesStatus(ctx context.Context, in *UpdateFreebiesStatusRequest, opts ...grpc.CallOption) (*UpdateFreebiesStatusResponse, error) {
	out := new(UpdateFreebiesStatusResponse)
	err := c.cc.Invoke(ctx, "/api.ChronexAdminProtoService/UpdateFreebiesStatus", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *chronexAdminProtoServiceClient) UpdateReviews(ctx context.Context, in *UpdateReviewsRequest, opts ...grpc.CallOption) (*UpdateReviewsResponse, error) {
	out := new(UpdateReviewsResponse)
	err := c.cc.Invoke(ctx, "/api.ChronexAdminProtoService/UpdateReviews", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *chronexAdminProtoServiceClient) UpdateReviewsStatus(ctx context.Context, in *UpdateReviewsStatusRequest, opts ...grpc.CallOption) (*UpdateReviewsStatusResponse, error) {
	out := new(UpdateReviewsStatusResponse)
	err := c.cc.Invoke(ctx, "/api.ChronexAdminProtoService/UpdateReviewsStatus", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *chronexAdminProtoServiceClient) UpdateProduct(ctx context.Context, in *UpdateProductRequest, opts ...grpc.CallOption) (*UpdateProductResponse, error) {
	out := new(UpdateProductResponse)
	err := c.cc.Invoke(ctx, "/api.ChronexAdminProtoService/UpdateProduct", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *chronexAdminProtoServiceClient) UpdateProductQuantity(ctx context.Context, in *UpdateProductQuantityRequest, opts ...grpc.CallOption) (*UpdateProductQuantityResponse, error) {
	out := new(UpdateProductQuantityResponse)
	err := c.cc.Invoke(ctx, "/api.ChronexAdminProtoService/UpdateProductQuantity", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *chronexAdminProtoServiceClient) UpdateProductStatus(ctx context.Context, in *UpdateProductStatusRequest, opts ...grpc.CallOption) (*UpdateProductStatusResponse, error) {
	out := new(UpdateProductStatusResponse)
	err := c.cc.Invoke(ctx, "/api.ChronexAdminProtoService/UpdateProductStatus", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *chronexAdminProtoServiceClient) UpdateOrder(ctx context.Context, in *UpdateOrderRequest, opts ...grpc.CallOption) (*UpdateOrderResponse, error) {
	out := new(UpdateOrderResponse)
	err := c.cc.Invoke(ctx, "/api.ChronexAdminProtoService/UpdateOrder", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *chronexAdminProtoServiceClient) UpdateOrderStatus(ctx context.Context, in *UpdateOrderStatusRequest, opts ...grpc.CallOption) (*UpdateOrderStatusResponse, error) {
	out := new(UpdateOrderStatusResponse)
	err := c.cc.Invoke(ctx, "/api.ChronexAdminProtoService/UpdateOrderStatus", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *chronexAdminProtoServiceClient) UpdateHomeImages(ctx context.Context, in *UpdateHomeImagesRequest, opts ...grpc.CallOption) (*UpdateHomeImagesResponse, error) {
	out := new(UpdateHomeImagesResponse)
	err := c.cc.Invoke(ctx, "/api.ChronexAdminProtoService/UpdateHomeImages", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *chronexAdminProtoServiceClient) DeleteHomeImages(ctx context.Context, in *DeleteHomeImagesRequest, opts ...grpc.CallOption) (*DeleteHomeImagesResponse, error) {
	out := new(DeleteHomeImagesResponse)
	err := c.cc.Invoke(ctx, "/api.ChronexAdminProtoService/DeleteHomeImages", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *chronexAdminProtoServiceClient) GetAllOrderRevenue(ctx context.Context, in *GetAllOrderRevenueRequest, opts ...grpc.CallOption) (*GetAllOrderRevenueResponse, error) {
	out := new(GetAllOrderRevenueResponse)
	err := c.cc.Invoke(ctx, "/api.ChronexAdminProtoService/GetAllOrderRevenue", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *chronexAdminProtoServiceClient) GetAllTotalOrder(ctx context.Context, in *GetAllTotalOrderRequest, opts ...grpc.CallOption) (*GetAllTotalOrderResponse, error) {
	out := new(GetAllTotalOrderResponse)
	err := c.cc.Invoke(ctx, "/api.ChronexAdminProtoService/GetAllTotalOrder", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *chronexAdminProtoServiceClient) GetBestSellingProducts(ctx context.Context, in *GetBestSellingProductsRequest, opts ...grpc.CallOption) (*GetBestSellingProductsResponse, error) {
	out := new(GetBestSellingProductsResponse)
	err := c.cc.Invoke(ctx, "/api.ChronexAdminProtoService/GetBestSellingProducts", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ChronexAdminProtoServiceServer is the server API for ChronexAdminProtoService service.
// All implementations must embed UnimplementedChronexAdminProtoServiceServer
// for forward compatibility
type ChronexAdminProtoServiceServer interface {
	SaveProduct(context.Context, *SaveProductRequest) (*SaveProductResponse, error)
	SaveFreebies(context.Context, *SaveFreebiesRequest) (*SaveFreebiesResponse, error)
	SaveReviews(context.Context, *SaveReviewsRequest) (*SaveReviewsResponse, error)
	SaveOrder(context.Context, *SaveOrderRequest) (*SaveOrderResponse, error)
	SaveHomeImages(context.Context, *SaveHomeImagesRequest) (*SaveHomeImagesResponse, error)
	GetAllFreebies(context.Context, *GetAllFreebiesRequest) (*GetAllFreebiesResponse, error)
	GetAllFreebiesDropdown(context.Context, *GetAllFreebiesDropdownRequest) (*GetAllFreebiesDropdownResponse, error)
	GetAllProduct(context.Context, *GetAllProductRequest) (*GetAllProductResponse, error)
	GetAllReviews(context.Context, *GetAllReviewsRequest) (*GetAllReviewsResponse, error)
	GetAllOrder(context.Context, *GetAllOrderRequest) (*GetAllOrderResponse, error)
	GetAllHomeImages(context.Context, *GetAllHomeImagesRequest) (*GetAllHomeImagesResponse, error)
	GetAllFreebiesById(context.Context, *GetAllFreebiesRequestById) (*GetAllFreebiesResponseById, error)
	GetAllProductById(context.Context, *GetAllProductRequestById) (*GetAllProductResponseById, error)
	GetAllReviewsById(context.Context, *GetAllReviewsRequestById) (*GetAllReviewsResponseById, error)
	UpdateFreebies(context.Context, *UpdateFreebiesRequest) (*UpdateFreebiesResponse, error)
	UpdateFreebiesQuantity(context.Context, *UpdateFreebiesQuantityRequest) (*UpdateFreebiesQuantityResponse, error)
	UpdateFreebiesStatus(context.Context, *UpdateFreebiesStatusRequest) (*UpdateFreebiesStatusResponse, error)
	UpdateReviews(context.Context, *UpdateReviewsRequest) (*UpdateReviewsResponse, error)
	UpdateReviewsStatus(context.Context, *UpdateReviewsStatusRequest) (*UpdateReviewsStatusResponse, error)
	UpdateProduct(context.Context, *UpdateProductRequest) (*UpdateProductResponse, error)
	UpdateProductQuantity(context.Context, *UpdateProductQuantityRequest) (*UpdateProductQuantityResponse, error)
	UpdateProductStatus(context.Context, *UpdateProductStatusRequest) (*UpdateProductStatusResponse, error)
	UpdateOrder(context.Context, *UpdateOrderRequest) (*UpdateOrderResponse, error)
	UpdateOrderStatus(context.Context, *UpdateOrderStatusRequest) (*UpdateOrderStatusResponse, error)
	UpdateHomeImages(context.Context, *UpdateHomeImagesRequest) (*UpdateHomeImagesResponse, error)
	DeleteHomeImages(context.Context, *DeleteHomeImagesRequest) (*DeleteHomeImagesResponse, error)
	GetAllOrderRevenue(context.Context, *GetAllOrderRevenueRequest) (*GetAllOrderRevenueResponse, error)
	GetAllTotalOrder(context.Context, *GetAllTotalOrderRequest) (*GetAllTotalOrderResponse, error)
	GetBestSellingProducts(context.Context, *GetBestSellingProductsRequest) (*GetBestSellingProductsResponse, error)
	mustEmbedUnimplementedChronexAdminProtoServiceServer()
}

// UnimplementedChronexAdminProtoServiceServer must be embedded to have forward compatible implementations.
type UnimplementedChronexAdminProtoServiceServer struct {
}

func (UnimplementedChronexAdminProtoServiceServer) SaveProduct(context.Context, *SaveProductRequest) (*SaveProductResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SaveProduct not implemented")
}
func (UnimplementedChronexAdminProtoServiceServer) SaveFreebies(context.Context, *SaveFreebiesRequest) (*SaveFreebiesResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SaveFreebies not implemented")
}
func (UnimplementedChronexAdminProtoServiceServer) SaveReviews(context.Context, *SaveReviewsRequest) (*SaveReviewsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SaveReviews not implemented")
}
func (UnimplementedChronexAdminProtoServiceServer) SaveOrder(context.Context, *SaveOrderRequest) (*SaveOrderResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SaveOrder not implemented")
}
func (UnimplementedChronexAdminProtoServiceServer) SaveHomeImages(context.Context, *SaveHomeImagesRequest) (*SaveHomeImagesResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SaveHomeImages not implemented")
}
func (UnimplementedChronexAdminProtoServiceServer) GetAllFreebies(context.Context, *GetAllFreebiesRequest) (*GetAllFreebiesResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetAllFreebies not implemented")
}
func (UnimplementedChronexAdminProtoServiceServer) GetAllFreebiesDropdown(context.Context, *GetAllFreebiesDropdownRequest) (*GetAllFreebiesDropdownResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetAllFreebiesDropdown not implemented")
}
func (UnimplementedChronexAdminProtoServiceServer) GetAllProduct(context.Context, *GetAllProductRequest) (*GetAllProductResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetAllProduct not implemented")
}
func (UnimplementedChronexAdminProtoServiceServer) GetAllReviews(context.Context, *GetAllReviewsRequest) (*GetAllReviewsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetAllReviews not implemented")
}
func (UnimplementedChronexAdminProtoServiceServer) GetAllOrder(context.Context, *GetAllOrderRequest) (*GetAllOrderResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetAllOrder not implemented")
}
func (UnimplementedChronexAdminProtoServiceServer) GetAllHomeImages(context.Context, *GetAllHomeImagesRequest) (*GetAllHomeImagesResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetAllHomeImages not implemented")
}
func (UnimplementedChronexAdminProtoServiceServer) GetAllFreebiesById(context.Context, *GetAllFreebiesRequestById) (*GetAllFreebiesResponseById, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetAllFreebiesById not implemented")
}
func (UnimplementedChronexAdminProtoServiceServer) GetAllProductById(context.Context, *GetAllProductRequestById) (*GetAllProductResponseById, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetAllProductById not implemented")
}
func (UnimplementedChronexAdminProtoServiceServer) GetAllReviewsById(context.Context, *GetAllReviewsRequestById) (*GetAllReviewsResponseById, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetAllReviewsById not implemented")
}
func (UnimplementedChronexAdminProtoServiceServer) UpdateFreebies(context.Context, *UpdateFreebiesRequest) (*UpdateFreebiesResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateFreebies not implemented")
}
func (UnimplementedChronexAdminProtoServiceServer) UpdateFreebiesQuantity(context.Context, *UpdateFreebiesQuantityRequest) (*UpdateFreebiesQuantityResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateFreebiesQuantity not implemented")
}
func (UnimplementedChronexAdminProtoServiceServer) UpdateFreebiesStatus(context.Context, *UpdateFreebiesStatusRequest) (*UpdateFreebiesStatusResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateFreebiesStatus not implemented")
}
func (UnimplementedChronexAdminProtoServiceServer) UpdateReviews(context.Context, *UpdateReviewsRequest) (*UpdateReviewsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateReviews not implemented")
}
func (UnimplementedChronexAdminProtoServiceServer) UpdateReviewsStatus(context.Context, *UpdateReviewsStatusRequest) (*UpdateReviewsStatusResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateReviewsStatus not implemented")
}
func (UnimplementedChronexAdminProtoServiceServer) UpdateProduct(context.Context, *UpdateProductRequest) (*UpdateProductResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateProduct not implemented")
}
func (UnimplementedChronexAdminProtoServiceServer) UpdateProductQuantity(context.Context, *UpdateProductQuantityRequest) (*UpdateProductQuantityResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateProductQuantity not implemented")
}
func (UnimplementedChronexAdminProtoServiceServer) UpdateProductStatus(context.Context, *UpdateProductStatusRequest) (*UpdateProductStatusResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateProductStatus not implemented")
}
func (UnimplementedChronexAdminProtoServiceServer) UpdateOrder(context.Context, *UpdateOrderRequest) (*UpdateOrderResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateOrder not implemented")
}
func (UnimplementedChronexAdminProtoServiceServer) UpdateOrderStatus(context.Context, *UpdateOrderStatusRequest) (*UpdateOrderStatusResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateOrderStatus not implemented")
}
func (UnimplementedChronexAdminProtoServiceServer) UpdateHomeImages(context.Context, *UpdateHomeImagesRequest) (*UpdateHomeImagesResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateHomeImages not implemented")
}
func (UnimplementedChronexAdminProtoServiceServer) DeleteHomeImages(context.Context, *DeleteHomeImagesRequest) (*DeleteHomeImagesResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteHomeImages not implemented")
}
func (UnimplementedChronexAdminProtoServiceServer) GetAllOrderRevenue(context.Context, *GetAllOrderRevenueRequest) (*GetAllOrderRevenueResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetAllOrderRevenue not implemented")
}
func (UnimplementedChronexAdminProtoServiceServer) GetAllTotalOrder(context.Context, *GetAllTotalOrderRequest) (*GetAllTotalOrderResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetAllTotalOrder not implemented")
}
func (UnimplementedChronexAdminProtoServiceServer) GetBestSellingProducts(context.Context, *GetBestSellingProductsRequest) (*GetBestSellingProductsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetBestSellingProducts not implemented")
}
func (UnimplementedChronexAdminProtoServiceServer) mustEmbedUnimplementedChronexAdminProtoServiceServer() {
}

// UnsafeChronexAdminProtoServiceServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to ChronexAdminProtoServiceServer will
// result in compilation errors.
type UnsafeChronexAdminProtoServiceServer interface {
	mustEmbedUnimplementedChronexAdminProtoServiceServer()
}

func RegisterChronexAdminProtoServiceServer(s grpc.ServiceRegistrar, srv ChronexAdminProtoServiceServer) {
	s.RegisterService(&ChronexAdminProtoService_ServiceDesc, srv)
}

func _ChronexAdminProtoService_SaveProduct_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SaveProductRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ChronexAdminProtoServiceServer).SaveProduct(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.ChronexAdminProtoService/SaveProduct",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ChronexAdminProtoServiceServer).SaveProduct(ctx, req.(*SaveProductRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ChronexAdminProtoService_SaveFreebies_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SaveFreebiesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ChronexAdminProtoServiceServer).SaveFreebies(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.ChronexAdminProtoService/SaveFreebies",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ChronexAdminProtoServiceServer).SaveFreebies(ctx, req.(*SaveFreebiesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ChronexAdminProtoService_SaveReviews_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SaveReviewsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ChronexAdminProtoServiceServer).SaveReviews(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.ChronexAdminProtoService/SaveReviews",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ChronexAdminProtoServiceServer).SaveReviews(ctx, req.(*SaveReviewsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ChronexAdminProtoService_SaveOrder_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SaveOrderRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ChronexAdminProtoServiceServer).SaveOrder(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.ChronexAdminProtoService/SaveOrder",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ChronexAdminProtoServiceServer).SaveOrder(ctx, req.(*SaveOrderRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ChronexAdminProtoService_SaveHomeImages_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SaveHomeImagesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ChronexAdminProtoServiceServer).SaveHomeImages(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.ChronexAdminProtoService/SaveHomeImages",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ChronexAdminProtoServiceServer).SaveHomeImages(ctx, req.(*SaveHomeImagesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ChronexAdminProtoService_GetAllFreebies_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetAllFreebiesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ChronexAdminProtoServiceServer).GetAllFreebies(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.ChronexAdminProtoService/GetAllFreebies",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ChronexAdminProtoServiceServer).GetAllFreebies(ctx, req.(*GetAllFreebiesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ChronexAdminProtoService_GetAllFreebiesDropdown_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetAllFreebiesDropdownRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ChronexAdminProtoServiceServer).GetAllFreebiesDropdown(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.ChronexAdminProtoService/GetAllFreebiesDropdown",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ChronexAdminProtoServiceServer).GetAllFreebiesDropdown(ctx, req.(*GetAllFreebiesDropdownRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ChronexAdminProtoService_GetAllProduct_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetAllProductRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ChronexAdminProtoServiceServer).GetAllProduct(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.ChronexAdminProtoService/GetAllProduct",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ChronexAdminProtoServiceServer).GetAllProduct(ctx, req.(*GetAllProductRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ChronexAdminProtoService_GetAllReviews_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetAllReviewsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ChronexAdminProtoServiceServer).GetAllReviews(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.ChronexAdminProtoService/GetAllReviews",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ChronexAdminProtoServiceServer).GetAllReviews(ctx, req.(*GetAllReviewsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ChronexAdminProtoService_GetAllOrder_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetAllOrderRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ChronexAdminProtoServiceServer).GetAllOrder(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.ChronexAdminProtoService/GetAllOrder",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ChronexAdminProtoServiceServer).GetAllOrder(ctx, req.(*GetAllOrderRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ChronexAdminProtoService_GetAllHomeImages_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetAllHomeImagesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ChronexAdminProtoServiceServer).GetAllHomeImages(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.ChronexAdminProtoService/GetAllHomeImages",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ChronexAdminProtoServiceServer).GetAllHomeImages(ctx, req.(*GetAllHomeImagesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ChronexAdminProtoService_GetAllFreebiesById_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetAllFreebiesRequestById)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ChronexAdminProtoServiceServer).GetAllFreebiesById(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.ChronexAdminProtoService/GetAllFreebiesById",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ChronexAdminProtoServiceServer).GetAllFreebiesById(ctx, req.(*GetAllFreebiesRequestById))
	}
	return interceptor(ctx, in, info, handler)
}

func _ChronexAdminProtoService_GetAllProductById_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetAllProductRequestById)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ChronexAdminProtoServiceServer).GetAllProductById(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.ChronexAdminProtoService/GetAllProductById",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ChronexAdminProtoServiceServer).GetAllProductById(ctx, req.(*GetAllProductRequestById))
	}
	return interceptor(ctx, in, info, handler)
}

func _ChronexAdminProtoService_GetAllReviewsById_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetAllReviewsRequestById)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ChronexAdminProtoServiceServer).GetAllReviewsById(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.ChronexAdminProtoService/GetAllReviewsById",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ChronexAdminProtoServiceServer).GetAllReviewsById(ctx, req.(*GetAllReviewsRequestById))
	}
	return interceptor(ctx, in, info, handler)
}

func _ChronexAdminProtoService_UpdateFreebies_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateFreebiesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ChronexAdminProtoServiceServer).UpdateFreebies(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.ChronexAdminProtoService/UpdateFreebies",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ChronexAdminProtoServiceServer).UpdateFreebies(ctx, req.(*UpdateFreebiesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ChronexAdminProtoService_UpdateFreebiesQuantity_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateFreebiesQuantityRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ChronexAdminProtoServiceServer).UpdateFreebiesQuantity(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.ChronexAdminProtoService/UpdateFreebiesQuantity",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ChronexAdminProtoServiceServer).UpdateFreebiesQuantity(ctx, req.(*UpdateFreebiesQuantityRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ChronexAdminProtoService_UpdateFreebiesStatus_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateFreebiesStatusRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ChronexAdminProtoServiceServer).UpdateFreebiesStatus(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.ChronexAdminProtoService/UpdateFreebiesStatus",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ChronexAdminProtoServiceServer).UpdateFreebiesStatus(ctx, req.(*UpdateFreebiesStatusRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ChronexAdminProtoService_UpdateReviews_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateReviewsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ChronexAdminProtoServiceServer).UpdateReviews(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.ChronexAdminProtoService/UpdateReviews",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ChronexAdminProtoServiceServer).UpdateReviews(ctx, req.(*UpdateReviewsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ChronexAdminProtoService_UpdateReviewsStatus_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateReviewsStatusRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ChronexAdminProtoServiceServer).UpdateReviewsStatus(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.ChronexAdminProtoService/UpdateReviewsStatus",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ChronexAdminProtoServiceServer).UpdateReviewsStatus(ctx, req.(*UpdateReviewsStatusRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ChronexAdminProtoService_UpdateProduct_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateProductRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ChronexAdminProtoServiceServer).UpdateProduct(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.ChronexAdminProtoService/UpdateProduct",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ChronexAdminProtoServiceServer).UpdateProduct(ctx, req.(*UpdateProductRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ChronexAdminProtoService_UpdateProductQuantity_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateProductQuantityRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ChronexAdminProtoServiceServer).UpdateProductQuantity(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.ChronexAdminProtoService/UpdateProductQuantity",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ChronexAdminProtoServiceServer).UpdateProductQuantity(ctx, req.(*UpdateProductQuantityRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ChronexAdminProtoService_UpdateProductStatus_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateProductStatusRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ChronexAdminProtoServiceServer).UpdateProductStatus(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.ChronexAdminProtoService/UpdateProductStatus",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ChronexAdminProtoServiceServer).UpdateProductStatus(ctx, req.(*UpdateProductStatusRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ChronexAdminProtoService_UpdateOrder_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateOrderRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ChronexAdminProtoServiceServer).UpdateOrder(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.ChronexAdminProtoService/UpdateOrder",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ChronexAdminProtoServiceServer).UpdateOrder(ctx, req.(*UpdateOrderRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ChronexAdminProtoService_UpdateOrderStatus_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateOrderStatusRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ChronexAdminProtoServiceServer).UpdateOrderStatus(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.ChronexAdminProtoService/UpdateOrderStatus",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ChronexAdminProtoServiceServer).UpdateOrderStatus(ctx, req.(*UpdateOrderStatusRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ChronexAdminProtoService_UpdateHomeImages_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateHomeImagesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ChronexAdminProtoServiceServer).UpdateHomeImages(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.ChronexAdminProtoService/UpdateHomeImages",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ChronexAdminProtoServiceServer).UpdateHomeImages(ctx, req.(*UpdateHomeImagesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ChronexAdminProtoService_DeleteHomeImages_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteHomeImagesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ChronexAdminProtoServiceServer).DeleteHomeImages(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.ChronexAdminProtoService/DeleteHomeImages",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ChronexAdminProtoServiceServer).DeleteHomeImages(ctx, req.(*DeleteHomeImagesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ChronexAdminProtoService_GetAllOrderRevenue_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetAllOrderRevenueRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ChronexAdminProtoServiceServer).GetAllOrderRevenue(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.ChronexAdminProtoService/GetAllOrderRevenue",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ChronexAdminProtoServiceServer).GetAllOrderRevenue(ctx, req.(*GetAllOrderRevenueRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ChronexAdminProtoService_GetAllTotalOrder_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetAllTotalOrderRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ChronexAdminProtoServiceServer).GetAllTotalOrder(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.ChronexAdminProtoService/GetAllTotalOrder",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ChronexAdminProtoServiceServer).GetAllTotalOrder(ctx, req.(*GetAllTotalOrderRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ChronexAdminProtoService_GetBestSellingProducts_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetBestSellingProductsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ChronexAdminProtoServiceServer).GetBestSellingProducts(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.ChronexAdminProtoService/GetBestSellingProducts",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ChronexAdminProtoServiceServer).GetBestSellingProducts(ctx, req.(*GetBestSellingProductsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

// ChronexAdminProtoService_ServiceDesc is the grpc.ServiceDesc for ChronexAdminProtoService service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var ChronexAdminProtoService_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "api.ChronexAdminProtoService",
	HandlerType: (*ChronexAdminProtoServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "SaveProduct",
			Handler:    _ChronexAdminProtoService_SaveProduct_Handler,
		},
		{
			MethodName: "SaveFreebies",
			Handler:    _ChronexAdminProtoService_SaveFreebies_Handler,
		},
		{
			MethodName: "SaveReviews",
			Handler:    _ChronexAdminProtoService_SaveReviews_Handler,
		},
		{
			MethodName: "SaveOrder",
			Handler:    _ChronexAdminProtoService_SaveOrder_Handler,
		},
		{
			MethodName: "SaveHomeImages",
			Handler:    _ChronexAdminProtoService_SaveHomeImages_Handler,
		},
		{
			MethodName: "GetAllFreebies",
			Handler:    _ChronexAdminProtoService_GetAllFreebies_Handler,
		},
		{
			MethodName: "GetAllFreebiesDropdown",
			Handler:    _ChronexAdminProtoService_GetAllFreebiesDropdown_Handler,
		},
		{
			MethodName: "GetAllProduct",
			Handler:    _ChronexAdminProtoService_GetAllProduct_Handler,
		},
		{
			MethodName: "GetAllReviews",
			Handler:    _ChronexAdminProtoService_GetAllReviews_Handler,
		},
		{
			MethodName: "GetAllOrder",
			Handler:    _ChronexAdminProtoService_GetAllOrder_Handler,
		},
		{
			MethodName: "GetAllHomeImages",
			Handler:    _ChronexAdminProtoService_GetAllHomeImages_Handler,
		},
		{
			MethodName: "GetAllFreebiesById",
			Handler:    _ChronexAdminProtoService_GetAllFreebiesById_Handler,
		},
		{
			MethodName: "GetAllProductById",
			Handler:    _ChronexAdminProtoService_GetAllProductById_Handler,
		},
		{
			MethodName: "GetAllReviewsById",
			Handler:    _ChronexAdminProtoService_GetAllReviewsById_Handler,
		},
		{
			MethodName: "UpdateFreebies",
			Handler:    _ChronexAdminProtoService_UpdateFreebies_Handler,
		},
		{
			MethodName: "UpdateFreebiesQuantity",
			Handler:    _ChronexAdminProtoService_UpdateFreebiesQuantity_Handler,
		},
		{
			MethodName: "UpdateFreebiesStatus",
			Handler:    _ChronexAdminProtoService_UpdateFreebiesStatus_Handler,
		},
		{
			MethodName: "UpdateReviews",
			Handler:    _ChronexAdminProtoService_UpdateReviews_Handler,
		},
		{
			MethodName: "UpdateReviewsStatus",
			Handler:    _ChronexAdminProtoService_UpdateReviewsStatus_Handler,
		},
		{
			MethodName: "UpdateProduct",
			Handler:    _ChronexAdminProtoService_UpdateProduct_Handler,
		},
		{
			MethodName: "UpdateProductQuantity",
			Handler:    _ChronexAdminProtoService_UpdateProductQuantity_Handler,
		},
		{
			MethodName: "UpdateProductStatus",
			Handler:    _ChronexAdminProtoService_UpdateProductStatus_Handler,
		},
		{
			MethodName: "UpdateOrder",
			Handler:    _ChronexAdminProtoService_UpdateOrder_Handler,
		},
		{
			MethodName: "UpdateOrderStatus",
			Handler:    _ChronexAdminProtoService_UpdateOrderStatus_Handler,
		},
		{
			MethodName: "UpdateHomeImages",
			Handler:    _ChronexAdminProtoService_UpdateHomeImages_Handler,
		},
		{
			MethodName: "DeleteHomeImages",
			Handler:    _ChronexAdminProtoService_DeleteHomeImages_Handler,
		},
		{
			MethodName: "GetAllOrderRevenue",
			Handler:    _ChronexAdminProtoService_GetAllOrderRevenue_Handler,
		},
		{
			MethodName: "GetAllTotalOrder",
			Handler:    _ChronexAdminProtoService_GetAllTotalOrder_Handler,
		},
		{
			MethodName: "GetBestSellingProducts",
			Handler:    _ChronexAdminProtoService_GetBestSellingProducts_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "pkg/pb/chronexdata.proto",
}
